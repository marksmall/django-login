"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os, environ, yaml, logging, logging.config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

env = environ.Env()

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '*6o65afw)86$5&dyb+_$1&@i1-bk^at6jd)v&$944mmch@-ba*'
SECRET_KEY = env('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'server',
    'server.users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'client/build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
# DATABASES = {
#     'default': {
#         'ATOMIC_REQUESTS': True,
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'NAME': env("DJANGO_DB_NAME", default=""),
#         'USER': env("DJANGO_DB_USER", default=""),
#         'PASSWORD': env("DJANGO_DB_PASSWORD", default=""),
#         'HOST': env("DJANGO_DB_HOST", default=""),
#         'PORT': env("DJANGO_DB_PORT", default=""),
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-gb'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'client/build/static'),
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

WHITENOISE_ROOT = os.path.join(BASE_DIR, 'client/build')

# AUTH_USER_MODEL = 'users.User'

# Django Rest Framework
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS':
    'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'COERCE_DECIMAL_TO_STRING':
    False,
    'DEFAULT_FILTER_BACKENDS':
    ('django_filters.rest_framework.DjangoFilterBackend', ),
}

# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "formatters": {
#         "standard": {
#             "format":
#             "[develop] %(asctime)s [%(levelname)s] %(name)s: %(message)s"
#         }
#     },
#     "handlers": {
#         "console": {
#             "level": "DEBUG",
#             "class": "logging.StreamHandler",
#         },
#         "mail_admins": {
#             "level": "ERROR",
#             "class": "django.utils.log.AdminEmailHandler"
#         }
#     },
#     "root": {
#         "handlers": ["console", "mail_admins"],
#         "level": "DEBUG",
#     },
# }

DEFAULT_LOGGING_CONFIG_PORT = 5000

with open(os.path.join(BASE_DIR, 'server/logging.yaml'), 'r') as stream:
    logging_config = yaml.load(stream)
LOGGING = logging_config
# LOGGING_CONFIG = "logging.config.fileConfig"
# LOGGING = os.path.join(BASE_DIR, 'server/logging.yaml')
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

DEFAULT_FROM_EMAIL = "Server Project <server@donotreply.com>"

# """
# Django settings for server project.

# For more information on this file, see
# https://docs.djangoproject.com/en/2.1/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/2.1/ref/settings/
# """
# import os

# from configurations import Configuration, values

# class Common(Configuration):
#     # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#     BASE_DIR = os.path.dirname(os.path.dirname(__file__))

#     # SECURITY WARNING: keep the secret key used in production secret!
#     SECRET_KEY = values.SecretValue()

#     # SECURITY WARNING: don't run with debug turned on in production!
#     DEBUG = values.BooleanValue(False)

#     ALLOWED_HOSTS = []

#     # Application definition
#     INSTALLED_APPS = [
#         'django.contrib.admin',
#         'django.contrib.auth',
#         'django.contrib.contenttypes',
#         'django.contrib.sessions',
#         'django.contrib.messages',
#         'whitenoise.runserver_nostatic',
#         'django.contrib.staticfiles',
#         'django.contrib.gis',
#         'corsheaders',
#         'rest_framework',
#         'django_filters',
#         'django_extensions',
#         'rest_framework_gis',
#         'debug_toolbar',
#         'server',
#         'server.users',
#     ]

#     MIDDLEWARE = [
#         'django.middleware.security.SecurityMiddleware',
#         'whitenoise.middleware.WhiteNoiseMiddleware',
#         'django.contrib.sessions.middleware.SessionMiddleware',
#         'corsheaders.middleware.CorsMiddleware',
#         'django.middleware.common.CommonMiddleware',
#         'django.middleware.csrf.CsrfViewMiddleware',
#         'django.contrib.auth.middleware.AuthenticationMiddleware',
#         'django.contrib.messages.middleware.MessageMiddleware',
#         'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     ]

#     ROOT_URLCONF = 'server.urls'

#     TEMPLATES = [
#         {
#             'BACKEND': 'django.template.backends.django.DjangoTemplates',
#             'DIRS': [os.path.join(BASE_DIR, 'client/build')],
#             'APP_DIRS': True,
#             'OPTIONS': {
#                 'context_processors': [
#                     'django.template.context_processors.debug',
#                     'django.template.context_processors.request',
#                     'django.contrib.auth.context_processors.auth',
#                     'django.contrib.messages.context_processors.messages',
#                 ],
#             },
#         },
#     ]

#     WSGI_APPLICATION = 'server.wsgi.application'

#     # Database
#     # https://docs.djangoproject.com/en/2.1/ref/settings/#databases
#     DATABASES = values.DatabaseURLValue('sqlite:///{}'.format(
#         os.path.join(BASE_DIR, 'db.sqlite3')))

#     # Password validation
#     # https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators
#     AUTH_PASSWORD_VALIDATORS = [
#         {
#             'NAME':
#             'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#         },
#         {
#             'NAME':
#             'django.contrib.auth.password_validation.MinimumLengthValidator',
#         },
#         {
#             'NAME':
#             'django.contrib.auth.password_validation.CommonPasswordValidator',
#         },
#         {
#             'NAME':
#             'django.contrib.auth.password_validation.NumericPasswordValidator',
#         },
#     ]

#     # Internationalization
#     # https://docs.djangoproject.com/en/2.1/topics/i18n/
#     LANGUAGE_CODE = 'en-gb'

#     TIME_ZONE = 'UTC'

#     USE_I18N = True

#     USE_L10N = True

#     USE_TZ = True

#     # Static files (CSS, JavaScript, Images)
#     # https://docs.djangoproject.com/en/2.1/howto/static-files/
#     STATIC_URL = '/static/'
#     STATIC_ROOT = os.path.join(BASE_DIR, 'static')
#     STATICFILES_DIRS = [
#         os.path.join(BASE_DIR, 'client/build/static'),
#     ]
#     STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#     WHITENOISE_ROOT = os.path.join(BASE_DIR, 'client/build')

#     # AUTH_USER_MODEL = 'users.User'

#     # Django Rest Framework
#     REST_FRAMEWORK = {
#         'DEFAULT_PAGINATION_CLASS':
#         'rest_framework.pagination.LimitOffsetPagination',
#         'DEFAULT_PERMISSION_CLASSES': [
#             'rest_framework.permissions.IsAuthenticated',
#         ],
#         'DEFAULT_AUTHENTICATION_CLASSES': [
#             'rest_framework.authentication.SessionAuthentication',
#         ],
#         'COERCE_DECIMAL_TO_STRING':
#         False,
#         'DEFAULT_FILTER_BACKENDS':
#         ('django_filters.rest_framework.DjangoFilterBackend', ),
#     }

# class Development(Common):
#     """
#     The in-development settings and the default configuration.
#     """
#     DEBUG = True

#     ALLOWED_HOSTS = []

#     INTERNAL_IPS = ['127.0.0.1']

#     MIDDLEWARE = Common.MIDDLEWARE + [
#         'debug_toolbar.middleware.DebugToolbarMiddleware'
#     ]

#     LOGGING = {
#         "version": 1,
#         "disable_existing_loggers": False,
#         "formatters": {
#             "standard": {
#                 "format":
#                 "[develop] %(asctime)s [%(levelname)s] %(name)s: %(message)s"
#             }
#         },
#         "handlers": {
#             "console": {
#                 "level": "DEBUG",
#                 "class": "logging.StreamHandler",
#             },
#             "mail_admins": {
#                 "level": "ERROR",
#                 "class": "django.utils.log.AdminEmailHandler"
#             }
#         },
#         "root": {
#             "handlers": ["console", "mail_admins"],
#             "level": "DEBUG",
#         },
#     }

# class Staging(Common):
#     """
#     The in-staging settings.
#     """
#     # Security
#     SESSION_COOKIE_SECURE = values.BooleanValue(True)
#     SECURE_BROWSER_XSS_FILTER = values.BooleanValue(True)
#     SECURE_CONTENT_TYPE_NOSNIFF = values.BooleanValue(True)
#     SECURE_HSTS_INCLUDE_SUBDOMAINS = values.BooleanValue(True)
#     SECURE_HSTS_SECONDS = values.IntegerValue(31536000)
#     SECURE_REDIRECT_EXEMPT = values.ListValue([])
#     SECURE_SSL_HOST = values.Value(None)
#     SECURE_SSL_REDIRECT = values.BooleanValue(True)
#     SECURE_PROXY_SSL_HEADER = values.TupleValue(
#         ('HTTP_X_FORWARDED_PROTO', 'https'))

# class Production(Staging):
#     """
#     The in-production settings.
#     """
#     pass
